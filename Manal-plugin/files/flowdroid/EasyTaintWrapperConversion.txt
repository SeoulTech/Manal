# Packages to include in the analysis
^android.
^java.
^org.apache.http.
# <java.lang.StringBuilder: void <init>(java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>
<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(double)>
<java.lang.StringBuilder: java.lang.StringBuilder append(float)>
<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
# <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.StringBuffer)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,boolean)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char[])>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char[],int,int)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,double)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,float)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,int)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,long)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.Object)>
# <java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence,int,int)>

# <java.lang.StringBuffer: void <init>(java.lang.String)>
<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>
<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>
<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>
<java.lang.StringBuffer: java.lang.StringBuffer append(double)>
<java.lang.StringBuffer: java.lang.StringBuffer append(float)>
<java.lang.StringBuffer: java.lang.StringBuffer append(int)>
<java.lang.StringBuffer: java.lang.StringBuffer append(long)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
# <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence,int,int)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,boolean)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[])>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[],int,int)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,double)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,float)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,int)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,long)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.Object)>
# <java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.CharSequence)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.CharSequence,int,int)>

<java.lang.String: void <init>(byte[])>
<java.lang.String: void <init>(byte[],int,int)>
<java.lang.String: void <init>(byte[],int,int,java.lang.String)>
<java.lang.String: void <init>(byte[],java.lang.String)>
<java.lang.String: void <init>(char[])>
<java.lang.String: void <init>(char[],int,int)>
<java.lang.String: void <init>(int[],int,int)>
<java.lang.String: void <init>(java.lang.String)>
<java.lang.String: void <init>(java.lang.StringBuffer)>
<java.lang.String: void <init>(java.lang.StringBuilder)>

<java.lang.String: java.lang.String valueOf(boolean)>
<java.lang.String: java.lang.String valueOf(char)>
<java.lang.String: java.lang.String valueOf(char[])>
<java.lang.String: java.lang.String valueOf(char[],int,int)>
<java.lang.String: java.lang.String valueOf(double)>
<java.lang.String: java.lang.String valueOf(float)>
<java.lang.String: java.lang.String valueOf(int)>
<java.lang.String: java.lang.String valueOf(long)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>

<java.lang.String: char[] toCharArray()>

<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>

<java.lang.Byte: java.lang.Byte valueOf(byte)>
<java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>
<java.lang.Byte: java.lang.Byte valueOf(java.lang.String,int)>
<java.lang.Byte: long parseByte(java.lang.String)>
<java.lang.Byte: long parseByte(java.lang.String,int)>

<java.lang.Integer: java.lang.String toBinaryString(int)>
<java.lang.Integer: java.lang.String toHexString(int)>
<java.lang.Integer: java.lang.String toOctalString(int)>

<java.lang.Integer: void <init>(int)>
<java.lang.Integer: void <init>(java.lang.String)>
<java.lang.Integer: int parseInt(java.lang.String)>
<java.lang.Integer: int parseInt(java.lang.String,int)>
<java.lang.Integer: java.lang.Integer valueOf(int)>
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>
<java.lang.Integer: java.lang.Integer toString(int)>
<java.lang.Integer: java.lang.Integer toString(int,int)>

<java.lang.Short: java.lang.Short valueOf(short)>
<java.lang.Short: java.lang.Short valueOf(java.lang.String)>
<java.lang.Short: java.lang.Short valueOf(java.lang.String,int)>
<java.lang.Short: long parseShort(java.lang.String)>
<java.lang.Short: long parseShort(java.lang.String,int)>

<java.lang.Long: void <init>(long)>
<java.lang.Long: void <init>(java.lang.String)>
<java.lang.Long: long parseLong(java.lang.String)>
<java.lang.Long: long parseLong(java.lang.String,int)>
<java.lang.Long: java.lang.Long valueOf(long)>
<java.lang.Long: java.lang.Long valueOf(java.lang.String)>
<java.lang.Long: java.lang.Long valueOf(java.lang.String,int)>
<java.lang.Long: java.lang.String toString(long)>
<java.lang.Long: java.lang.String toString(long,int)>

<java.lang.Float: void <init>(float)>
<java.lang.Float: void <init>(java.lang.String)>
<java.lang.Float: float parseFloat(java.lang.String)>
<java.lang.Float: java.lang.Float valueOf(float)>
<java.lang.Float: java.lang.Float valueOf(java.lang.String)>
<java.lang.Float: java.lang.String toString(float)>

<java.lang.Double: void <init>(double)>
<java.lang.Double: void <init>(java.lang.String)>
<java.lang.Double: double parseDouble(java.lang.String)>
<java.lang.Double: java.lang.Double valueOf(double)>
<java.lang.Double: java.lang.Double valueOf(java.lang.String)>
<java.lang.Double: java.lang.String toString(double)>

<java.lang.Boolean: void <init>(boolean)>
<java.lang.Boolean: void <init>(java.lang.String)>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>
<java.lang.Boolean: java.lang.String toString(boolean)>

<java.lang.Character: void <init>(char)>
<java.lang.Character: java.lang.Boolean valueOf(char)>
<java.lang.Character: char forDigit(int,int)>
